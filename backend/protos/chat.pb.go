// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type ConnectRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type NewMessageRequest struct {
	User                 string               `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Memo                 string               `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	Channel              string               `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	PostDate             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NewMessageRequest) Reset()         { *m = NewMessageRequest{} }
func (m *NewMessageRequest) String() string { return proto.CompactTextString(m) }
func (*NewMessageRequest) ProtoMessage()    {}
func (*NewMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *NewMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMessageRequest.Unmarshal(m, b)
}
func (m *NewMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMessageRequest.Marshal(b, m, deterministic)
}
func (m *NewMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMessageRequest.Merge(m, src)
}
func (m *NewMessageRequest) XXX_Size() int {
	return xxx_messageInfo_NewMessageRequest.Size(m)
}
func (m *NewMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewMessageRequest proto.InternalMessageInfo

func (m *NewMessageRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *NewMessageRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *NewMessageRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *NewMessageRequest) GetPostDate() *timestamp.Timestamp {
	if m != nil {
		return m.PostDate
	}
	return nil
}

type NewMessageResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewMessageResponse) Reset()         { *m = NewMessageResponse{} }
func (m *NewMessageResponse) String() string { return proto.CompactTextString(m) }
func (*NewMessageResponse) ProtoMessage()    {}
func (*NewMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *NewMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMessageResponse.Unmarshal(m, b)
}
func (m *NewMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMessageResponse.Marshal(b, m, deterministic)
}
func (m *NewMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMessageResponse.Merge(m, src)
}
func (m *NewMessageResponse) XXX_Size() int {
	return xxx_messageInfo_NewMessageResponse.Size(m)
}
func (m *NewMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewMessageResponse proto.InternalMessageInfo

func (m *NewMessageResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type EditMessageRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Memo                 string   `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditMessageRequest) Reset()         { *m = EditMessageRequest{} }
func (m *EditMessageRequest) String() string { return proto.CompactTextString(m) }
func (*EditMessageRequest) ProtoMessage()    {}
func (*EditMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *EditMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditMessageRequest.Unmarshal(m, b)
}
func (m *EditMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditMessageRequest.Marshal(b, m, deterministic)
}
func (m *EditMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditMessageRequest.Merge(m, src)
}
func (m *EditMessageRequest) XXX_Size() int {
	return xxx_messageInfo_EditMessageRequest.Size(m)
}
func (m *EditMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditMessageRequest proto.InternalMessageInfo

func (m *EditMessageRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditMessageRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

type NewChannelRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Owner                string   `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewChannelRequest) Reset()         { *m = NewChannelRequest{} }
func (m *NewChannelRequest) String() string { return proto.CompactTextString(m) }
func (*NewChannelRequest) ProtoMessage()    {}
func (*NewChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *NewChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewChannelRequest.Unmarshal(m, b)
}
func (m *NewChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewChannelRequest.Marshal(b, m, deterministic)
}
func (m *NewChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewChannelRequest.Merge(m, src)
}
func (m *NewChannelRequest) XXX_Size() int {
	return xxx_messageInfo_NewChannelRequest.Size(m)
}
func (m *NewChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewChannelRequest proto.InternalMessageInfo

func (m *NewChannelRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewChannelRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewChannelRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type NewChannelResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewChannelResponse) Reset()         { *m = NewChannelResponse{} }
func (m *NewChannelResponse) String() string { return proto.CompactTextString(m) }
func (*NewChannelResponse) ProtoMessage()    {}
func (*NewChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *NewChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewChannelResponse.Unmarshal(m, b)
}
func (m *NewChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewChannelResponse.Marshal(b, m, deterministic)
}
func (m *NewChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewChannelResponse.Merge(m, src)
}
func (m *NewChannelResponse) XXX_Size() int {
	return xxx_messageInfo_NewChannelResponse.Size(m)
}
func (m *NewChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewChannelResponse proto.InternalMessageInfo

func (m *NewChannelResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NewUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ImagePath            string   `protobuf:"bytes,4,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserRequest) Reset()         { *m = NewUserRequest{} }
func (m *NewUserRequest) String() string { return proto.CompactTextString(m) }
func (*NewUserRequest) ProtoMessage()    {}
func (*NewUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *NewUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserRequest.Unmarshal(m, b)
}
func (m *NewUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserRequest.Marshal(b, m, deterministic)
}
func (m *NewUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserRequest.Merge(m, src)
}
func (m *NewUserRequest) XXX_Size() int {
	return xxx_messageInfo_NewUserRequest.Size(m)
}
func (m *NewUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserRequest proto.InternalMessageInfo

func (m *NewUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NewUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *NewUserRequest) GetImagePath() string {
	if m != nil {
		return m.ImagePath
	}
	return ""
}

type NewUserResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserResponse) Reset()         { *m = NewUserResponse{} }
func (m *NewUserResponse) String() string { return proto.CompactTextString(m) }
func (*NewUserResponse) ProtoMessage()    {}
func (*NewUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{8}
}

func (m *NewUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserResponse.Unmarshal(m, b)
}
func (m *NewUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserResponse.Marshal(b, m, deterministic)
}
func (m *NewUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserResponse.Merge(m, src)
}
func (m *NewUserResponse) XXX_Size() int {
	return xxx_messageInfo_NewUserResponse.Size(m)
}
func (m *NewUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserResponse proto.InternalMessageInfo

func (m *NewUserResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type BroadcastMessage struct {
	ChatMessage          *NewMessageRequest `protobuf:"bytes,1,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
	Channel              *NewChannelRequest `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	User                 *NewUserRequest    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BroadcastMessage) Reset()         { *m = BroadcastMessage{} }
func (m *BroadcastMessage) String() string { return proto.CompactTextString(m) }
func (*BroadcastMessage) ProtoMessage()    {}
func (*BroadcastMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{9}
}

func (m *BroadcastMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastMessage.Unmarshal(m, b)
}
func (m *BroadcastMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastMessage.Marshal(b, m, deterministic)
}
func (m *BroadcastMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastMessage.Merge(m, src)
}
func (m *BroadcastMessage) XXX_Size() int {
	return xxx_messageInfo_BroadcastMessage.Size(m)
}
func (m *BroadcastMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastMessage proto.InternalMessageInfo

func (m *BroadcastMessage) GetChatMessage() *NewMessageRequest {
	if m != nil {
		return m.ChatMessage
	}
	return nil
}

func (m *BroadcastMessage) GetChannel() *NewChannelRequest {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *BroadcastMessage) GetUser() *NewUserRequest {
	if m != nil {
		return m.User
	}
	return nil
}

type EditChannelRequest struct {
	OldName              string   `protobuf:"bytes,1,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName              string   `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditChannelRequest) Reset()         { *m = EditChannelRequest{} }
func (m *EditChannelRequest) String() string { return proto.CompactTextString(m) }
func (*EditChannelRequest) ProtoMessage()    {}
func (*EditChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{10}
}

func (m *EditChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditChannelRequest.Unmarshal(m, b)
}
func (m *EditChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditChannelRequest.Marshal(b, m, deterministic)
}
func (m *EditChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditChannelRequest.Merge(m, src)
}
func (m *EditChannelRequest) XXX_Size() int {
	return xxx_messageInfo_EditChannelRequest.Size(m)
}
func (m *EditChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditChannelRequest proto.InternalMessageInfo

func (m *EditChannelRequest) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *EditChannelRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *EditChannelRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "chat.EmptyMessage")
	proto.RegisterType((*ConnectRequest)(nil), "chat.ConnectRequest")
	proto.RegisterType((*NewMessageRequest)(nil), "chat.NewMessageRequest")
	proto.RegisterType((*NewMessageResponse)(nil), "chat.NewMessageResponse")
	proto.RegisterType((*EditMessageRequest)(nil), "chat.EditMessageRequest")
	proto.RegisterType((*NewChannelRequest)(nil), "chat.NewChannelRequest")
	proto.RegisterType((*NewChannelResponse)(nil), "chat.NewChannelResponse")
	proto.RegisterType((*NewUserRequest)(nil), "chat.NewUserRequest")
	proto.RegisterType((*NewUserResponse)(nil), "chat.NewUserResponse")
	proto.RegisterType((*BroadcastMessage)(nil), "chat.BroadcastMessage")
	proto.RegisterType((*EditChannelRequest)(nil), "chat.EditChannelRequest")
}

func init() {
	proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54)
}

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xba, 0x2d, 0x6d, 0x27, 0xab, 0x02, 0xa3, 0x02, 0xd9, 0x48, 0x88, 0x12, 0x71, 0xe8,
	0xa9, 0x0b, 0x45, 0xe2, 0xf3, 0x80, 0x96, 0xb2, 0x47, 0x2a, 0x14, 0xe0, 0x5c, 0x79, 0xe3, 0xa1,
	0x8d, 0x94, 0xc4, 0x21, 0x76, 0x89, 0xf8, 0x13, 0xfc, 0x11, 0xfe, 0x22, 0x07, 0x14, 0xdb, 0xe9,
	0x66, 0xd3, 0x76, 0x6f, 0x9e, 0xc9, 0x8c, 0xe7, 0xbd, 0x37, 0xcf, 0x01, 0x88, 0x36, 0x4c, 0xcd,
	0xf2, 0x42, 0x28, 0x81, 0xdd, 0xea, 0xec, 0x3f, 0x59, 0x0b, 0xb1, 0x4e, 0xe8, 0x5c, 0xe7, 0xae,
	0xb6, 0x3f, 0xce, 0x55, 0x9c, 0x92, 0x54, 0x2c, 0xcd, 0x4d, 0x59, 0x30, 0x82, 0xd3, 0xcb, 0x34,
	0x57, 0xbf, 0x3f, 0x93, 0x94, 0x6c, 0x4d, 0xc1, 0x33, 0x18, 0x2d, 0x44, 0x96, 0x51, 0xa4, 0x42,
	0xfa, 0xb9, 0x25, 0xa9, 0x10, 0xa1, 0xbb, 0x95, 0x54, 0x78, 0xce, 0xc4, 0x99, 0x0e, 0x43, 0x7d,
	0x0e, 0xfe, 0x38, 0x70, 0x7f, 0x49, 0xa5, 0x6d, 0xba, 0xa5, 0xb2, 0xca, 0xa5, 0x94, 0x0a, 0xaf,
	0x63, 0x72, 0xd5, 0x19, 0x3d, 0xe8, 0x47, 0x1b, 0x96, 0x65, 0x94, 0x78, 0x27, 0x3a, 0x5d, 0x87,
	0xf8, 0x1a, 0x86, 0xb9, 0x90, 0x6a, 0xc5, 0x99, 0x22, 0xaf, 0x3b, 0x71, 0xa6, 0xee, 0xdc, 0x9f,
	0x19, 0x0a, 0xb3, 0x9a, 0xc2, 0xec, 0x5b, 0x4d, 0x21, 0x1c, 0x54, 0xc5, 0x9f, 0x98, 0xaa, 0x60,
	0x63, 0x13, 0x8f, 0xcc, 0x45, 0x26, 0x09, 0x47, 0xd0, 0x89, 0xb9, 0x86, 0xd3, 0x0b, 0x3b, 0x31,
	0x0f, 0xde, 0x00, 0x5e, 0xf2, 0x58, 0xb5, 0x60, 0xb7, 0xaa, 0x0e, 0x41, 0x0e, 0x56, 0x9a, 0xef,
	0xc2, 0xc0, 0x6c, 0xf0, 0xcd, 0x58, 0x4a, 0x35, 0xdf, 0xea, 0x8c, 0x13, 0x70, 0x39, 0xc9, 0xa8,
	0x88, 0x73, 0x15, 0x8b, 0xcc, 0xde, 0xd1, 0x4c, 0xe1, 0x18, 0x7a, 0xa2, 0xcc, 0xa8, 0xb0, 0xdc,
	0x4d, 0x60, 0x09, 0xec, 0x06, 0x1c, 0x21, 0xb0, 0x85, 0xd1, 0x92, 0xca, 0xef, 0x92, 0x8a, 0xdb,
	0x30, 0x8c, 0xa1, 0x47, 0x29, 0x8b, 0x13, 0x3b, 0xdd, 0x04, 0xe8, 0xc3, 0x20, 0x67, 0x52, 0x96,
	0xa2, 0xe0, 0x76, 0xf4, 0x2e, 0xc6, 0xc7, 0x00, 0x71, 0xca, 0xd6, 0xb4, 0xca, 0x99, 0xda, 0x68,
	0xe1, 0x87, 0xe1, 0x50, 0x67, 0xbe, 0x30, 0xb5, 0x09, 0x9e, 0xc2, 0xdd, 0xdd, 0xd8, 0x23, 0xc8,
	0xfe, 0x3a, 0x70, 0xef, 0x63, 0x21, 0x18, 0x8f, 0x98, 0xac, 0x05, 0xc6, 0x77, 0x70, 0x5a, 0xb9,
	0x70, 0x95, 0x9a, 0x58, 0x97, 0xbb, 0xf3, 0x47, 0x33, 0x6d, 0xd3, 0x3d, 0xff, 0x84, 0x6e, 0x95,
	0xaf, 0x7b, 0x5f, 0x5c, 0x9b, 0xa4, 0xd3, 0x6a, 0xbb, 0xb9, 0x86, 0x6b, 0xf7, 0x4c, 0xad, 0xff,
	0x4e, 0x74, 0xfd, 0x78, 0x57, 0xdf, 0xd0, 0xcb, 0xfa, 0x37, 0x31, 0x46, 0x68, 0xed, 0xf3, 0x0c,
	0x06, 0x22, 0xe1, 0xab, 0x86, 0x9e, 0x7d, 0x91, 0xf0, 0x65, 0x25, 0xe9, 0x19, 0x0c, 0x32, 0x2a,
	0xcd, 0x27, 0xa3, 0x6a, 0x3f, 0xa3, 0x72, 0x79, 0x60, 0xe3, 0x27, 0x7b, 0x1b, 0x9f, 0xff, 0xeb,
	0x80, 0xbb, 0xd8, 0x30, 0xf5, 0x95, 0x8a, 0x5f, 0x71, 0x44, 0xf8, 0x16, 0xfa, 0xf6, 0x8d, 0xa1,
	0x05, 0x79, 0xf3, 0xc9, 0xf9, 0x0f, 0x4d, 0xb6, 0xad, 0xe7, 0x73, 0x07, 0x3f, 0x00, 0x5c, 0x70,
	0x5e, 0x6b, 0x74, 0x4c, 0x49, 0xdf, 0xdb, 0xff, 0x60, 0xf7, 0x66, 0x2e, 0xb0, 0xc4, 0xf1, 0x98,
	0xa6, 0x8d, 0x0b, 0xda, 0x96, 0x7c, 0x05, 0xfd, 0x0b, 0xce, 0x2b, 0x49, 0xf1, 0xa0, 0xc2, 0xfe,
	0x83, 0x56, 0xd6, 0xf6, 0xbd, 0x07, 0xb7, 0xf1, 0xf6, 0xd0, 0x0e, 0xd8, 0x7f, 0x8e, 0x3e, 0xda,
	0x2f, 0x8d, 0xbf, 0x52, 0xdd, 0x5c, 0xc3, 0x6e, 0x34, 0xb7, 0x70, 0x1f, 0x68, 0xbe, 0xba, 0xa3,
	0xff, 0x1c, 0x2f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x07, 0x47, 0x06, 0x1e, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (ChatService_ConnectClient, error)
	AddMessage(ctx context.Context, in *NewMessageRequest, opts ...grpc.CallOption) (*NewMessageResponse, error)
	AddChannel(ctx context.Context, in *NewChannelRequest, opts ...grpc.CallOption) (*NewChannelResponse, error)
	AddUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserResponse, error)
	EditMessage(ctx context.Context, in *EditMessageRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	EditChannel(ctx context.Context, in *EditChannelRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (ChatService_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/chat.ChatService/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceConnectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_ConnectClient interface {
	Recv() (*BroadcastMessage, error)
	grpc.ClientStream
}

type chatServiceConnectClient struct {
	grpc.ClientStream
}

func (x *chatServiceConnectClient) Recv() (*BroadcastMessage, error) {
	m := new(BroadcastMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) AddMessage(ctx context.Context, in *NewMessageRequest, opts ...grpc.CallOption) (*NewMessageResponse, error) {
	out := new(NewMessageResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/AddMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) AddChannel(ctx context.Context, in *NewChannelRequest, opts ...grpc.CallOption) (*NewChannelResponse, error) {
	out := new(NewChannelResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/AddChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) AddUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserResponse, error) {
	out := new(NewUserResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) EditMessage(ctx context.Context, in *EditMessageRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/chat.ChatService/EditMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) EditChannel(ctx context.Context, in *EditChannelRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/chat.ChatService/EditChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Connect(*ConnectRequest, ChatService_ConnectServer) error
	AddMessage(context.Context, *NewMessageRequest) (*NewMessageResponse, error)
	AddChannel(context.Context, *NewChannelRequest) (*NewChannelResponse, error)
	AddUser(context.Context, *NewUserRequest) (*NewUserResponse, error)
	EditMessage(context.Context, *EditMessageRequest) (*EmptyMessage, error)
	EditChannel(context.Context, *EditChannelRequest) (*EmptyMessage, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) Connect(req *ConnectRequest, srv ChatService_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedChatServiceServer) AddMessage(ctx context.Context, req *NewMessageRequest) (*NewMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMessage not implemented")
}
func (*UnimplementedChatServiceServer) AddChannel(ctx context.Context, req *NewChannelRequest) (*NewChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddChannel not implemented")
}
func (*UnimplementedChatServiceServer) AddUser(ctx context.Context, req *NewUserRequest) (*NewUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedChatServiceServer) EditMessage(ctx context.Context, req *EditMessageRequest) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditMessage not implemented")
}
func (*UnimplementedChatServiceServer) EditChannel(ctx context.Context, req *EditChannelRequest) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChannel not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConnectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).Connect(m, &chatServiceConnectServer{stream})
}

type ChatService_ConnectServer interface {
	Send(*BroadcastMessage) error
	grpc.ServerStream
}

type chatServiceConnectServer struct {
	grpc.ServerStream
}

func (x *chatServiceConnectServer) Send(m *BroadcastMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatService_AddMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).AddMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/AddMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).AddMessage(ctx, req.(*NewMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_AddChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).AddChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/AddChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).AddChannel(ctx, req.(*NewChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).AddUser(ctx, req.(*NewUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_EditMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).EditMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/EditMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).EditMessage(ctx, req.(*EditMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_EditChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).EditChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/EditChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).EditChannel(ctx, req.(*EditChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMessage",
			Handler:    _ChatService_AddMessage_Handler,
		},
		{
			MethodName: "AddChannel",
			Handler:    _ChatService_AddChannel_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _ChatService_AddUser_Handler,
		},
		{
			MethodName: "EditMessage",
			Handler:    _ChatService_EditMessage_Handler,
		},
		{
			MethodName: "EditChannel",
			Handler:    _ChatService_EditChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _ChatService_Connect_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
