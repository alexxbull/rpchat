// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChatMessageRequest struct {
	User                 string               `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Memo                 string               `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	Channel              string               `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	PostDate             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChatMessageRequest) Reset()         { *m = ChatMessageRequest{} }
func (m *ChatMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ChatMessageRequest) ProtoMessage()    {}
func (*ChatMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *ChatMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageRequest.Unmarshal(m, b)
}
func (m *ChatMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageRequest.Marshal(b, m, deterministic)
}
func (m *ChatMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageRequest.Merge(m, src)
}
func (m *ChatMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ChatMessageRequest.Size(m)
}
func (m *ChatMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageRequest proto.InternalMessageInfo

func (m *ChatMessageRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ChatMessageRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *ChatMessageRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChatMessageRequest) GetPostDate() *timestamp.Timestamp {
	if m != nil {
		return m.PostDate
	}
	return nil
}

type ChatMessageResponse struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessageResponse) Reset()         { *m = ChatMessageResponse{} }
func (m *ChatMessageResponse) String() string { return proto.CompactTextString(m) }
func (*ChatMessageResponse) ProtoMessage()    {}
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *ChatMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageResponse.Unmarshal(m, b)
}
func (m *ChatMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageResponse.Marshal(b, m, deterministic)
}
func (m *ChatMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageResponse.Merge(m, src)
}
func (m *ChatMessageResponse) XXX_Size() int {
	return xxx_messageInfo_ChatMessageResponse.Size(m)
}
func (m *ChatMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageResponse proto.InternalMessageInfo

func (m *ChatMessageResponse) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type BroadcastMessage struct {
	ChatMessage          *ChatMessageRequest `protobuf:"bytes,1,opt,name=chat_message,json=chatMessage,proto3" json:"chat_message,omitempty"`
	Id                   int32               `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BroadcastMessage) Reset()         { *m = BroadcastMessage{} }
func (m *BroadcastMessage) String() string { return proto.CompactTextString(m) }
func (*BroadcastMessage) ProtoMessage()    {}
func (*BroadcastMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *BroadcastMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastMessage.Unmarshal(m, b)
}
func (m *BroadcastMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastMessage.Marshal(b, m, deterministic)
}
func (m *BroadcastMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastMessage.Merge(m, src)
}
func (m *BroadcastMessage) XXX_Size() int {
	return xxx_messageInfo_BroadcastMessage.Size(m)
}
func (m *BroadcastMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastMessage proto.InternalMessageInfo

func (m *BroadcastMessage) GetChatMessage() *ChatMessageRequest {
	if m != nil {
		return m.ChatMessage
	}
	return nil
}

func (m *BroadcastMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*ChatMessageRequest)(nil), "chat.ChatMessageRequest")
	proto.RegisterType((*ChatMessageResponse)(nil), "chat.ChatMessageResponse")
	proto.RegisterType((*EmptyMessage)(nil), "chat.EmptyMessage")
	proto.RegisterType((*BroadcastMessage)(nil), "chat.BroadcastMessage")
}

func init() {
	proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54)
}

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x95, 0x52, 0xa0, 0xbd, 0x54, 0x15, 0x3a, 0x24, 0x14, 0xb2, 0x50, 0x65, 0xea, 0x94,
	0x42, 0x19, 0x10, 0x62, 0x2b, 0x30, 0xb2, 0xb8, 0xec, 0x95, 0x6b, 0x1f, 0x6d, 0xa4, 0x3a, 0x0e,
	0xb1, 0x53, 0x89, 0xef, 0x80, 0xc4, 0x57, 0x46, 0xb6, 0x49, 0xf9, 0xbf, 0xdd, 0x3d, 0xdf, 0xbd,
	0xfb, 0xf9, 0x01, 0x88, 0x35, 0xb7, 0x79, 0x55, 0x6b, 0xab, 0xb1, 0xeb, 0xea, 0xf4, 0x6c, 0xa5,
	0xf5, 0x6a, 0x43, 0x13, 0xaf, 0x2d, 0x9b, 0xa7, 0x89, 0x2d, 0x14, 0x19, 0xcb, 0x55, 0x15, 0xc6,
	0xb2, 0xb7, 0x08, 0xf0, 0x76, 0xcd, 0xed, 0x03, 0x19, 0xc3, 0x57, 0xc4, 0xe8, 0xb9, 0x21, 0x63,
	0x11, 0xa1, 0xdb, 0x18, 0xaa, 0x93, 0x68, 0x14, 0x8d, 0xfb, 0xcc, 0xd7, 0x4e, 0x53, 0xa4, 0x74,
	0xd2, 0x09, 0x9a, 0xab, 0x31, 0x81, 0x43, 0xb1, 0xe6, 0x65, 0x49, 0x9b, 0x64, 0xcf, 0xcb, 0x6d,
	0x8b, 0x57, 0xd0, 0xaf, 0xb4, 0xb1, 0x0b, 0xc9, 0x2d, 0x25, 0xdd, 0x51, 0x34, 0x8e, 0xa7, 0x69,
	0x1e, 0x68, 0xf2, 0x96, 0x26, 0x7f, 0x6c, 0x69, 0x58, 0xcf, 0x0d, 0xdf, 0x71, 0x4b, 0xd9, 0x05,
	0x1c, 0x7f, 0x03, 0x32, 0x95, 0x2e, 0x0d, 0x61, 0x0a, 0xbd, 0x9a, 0x04, 0x15, 0x5b, 0x92, 0x9e,
	0xaa, 0xc7, 0x76, 0x7d, 0x36, 0x84, 0xc1, 0xbd, 0xaa, 0xec, 0xcb, 0xc7, 0x4e, 0xb6, 0x80, 0xa3,
	0x59, 0xad, 0xb9, 0x14, 0xdc, 0xb4, 0x3e, 0x78, 0x03, 0x03, 0x97, 0xc8, 0x42, 0x85, 0xde, 0x7b,
	0xc4, 0xd3, 0x24, 0xf7, 0x91, 0xfd, 0x4e, 0x80, 0xc5, 0xe2, 0x53, 0xc3, 0x21, 0x74, 0x0a, 0xe9,
	0x3f, 0xbe, 0xcf, 0x3a, 0x85, 0x9c, 0xbe, 0x46, 0x10, 0xbb, 0x9d, 0x39, 0xd5, 0xdb, 0x42, 0x10,
	0x5e, 0x43, 0x7f, 0x77, 0x10, 0x31, 0x78, 0x7e, 0x25, 0x4a, 0x4f, 0x82, 0xf6, 0x93, 0xea, 0x3c,
	0xc2, 0x19, 0xc4, 0x73, 0x2a, 0x65, 0x7b, 0xe9, 0x5f, 0xa0, 0xf4, 0xf4, 0x8f, 0x97, 0x90, 0xcd,
	0xf2, 0xc0, 0x07, 0x7a, 0xf9, 0x1e, 0x00, 0x00, 0xff, 0xff, 0x99, 0x95, 0x15, 0xdb, 0x00, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Broadcast(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (ChatService_BroadcastClient, error)
	SendMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*ChatMessageResponse, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Broadcast(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (ChatService_BroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/chat.ChatService/Broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceBroadcastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_BroadcastClient interface {
	Recv() (*BroadcastMessage, error)
	grpc.ClientStream
}

type chatServiceBroadcastClient struct {
	grpc.ClientStream
}

func (x *chatServiceBroadcastClient) Recv() (*BroadcastMessage, error) {
	m := new(BroadcastMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) SendMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*ChatMessageResponse, error) {
	out := new(ChatMessageResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Broadcast(*EmptyMessage, ChatService_BroadcastServer) error
	SendMessage(context.Context, *ChatMessageRequest) (*ChatMessageResponse, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) Broadcast(req *EmptyMessage, srv ChatService_BroadcastServer) error {
	return status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}
func (*UnimplementedChatServiceServer) SendMessage(ctx context.Context, req *ChatMessageRequest) (*ChatMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).Broadcast(m, &chatServiceBroadcastServer{stream})
}

type ChatService_BroadcastServer interface {
	Send(*BroadcastMessage) error
	grpc.ServerStream
}

type chatServiceBroadcastServer struct {
	grpc.ServerStream
}

func (x *chatServiceBroadcastServer) Send(m *BroadcastMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendMessage(ctx, req.(*ChatMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _ChatService_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Broadcast",
			Handler:       _ChatService_Broadcast_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
