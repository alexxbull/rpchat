syntax = "proto3";

package chat;

import "google/protobuf/timestamp.proto";

message EmptyMessage {}

message NewMessageRequest {
  string user = 1;
  string memo = 2;
  string channel = 3;
}

message EditMessageRequest {
  int32 id = 1;
  string memo = 2;
  string user = 3;
  bool edited = 4;
}

message DeleteMessageRequest {
  int32 id = 1;
  string username = 2;
}

message NewChannelRequest {
  string name = 1;
  string description = 2;
  string owner = 3;
}

message EditChannelRequest {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string owner = 4;
}

message DeleteChannelRequest {
  int32 id = 1;
  string name = 2;
  string username = 3;
}

message NewUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string image_path = 4;
}

message EditUserRequest {
  string old_name = 1;
  string email = 2;
  string name = 3;
  string old_password = 4;
  string password = 5;
}

message GetChannelsMessage {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string owner = 4;
}

message GetChannelsResponse { repeated GetChannelsMessage channels = 1; }

message GetUsersMessage {
  int32 id = 1;
  string name = 2;
  string avatar = 3;
}

message GetUsersResponse { repeated GetUsersMessage users = 1; }

message GetMessagesRequest { string channel = 1; }

message GetFilteredMessagesRequest {
  string channel = 1;
  int32 min_id = 2;
}

message GetMessagesMessage {
  int32 id = 1;
  string memo = 2;
  string channel = 3;
  google.protobuf.Timestamp timestamp = 4;
  string user = 5;
  string avatar = 6;
  bool edited = 7;
}

message GetMessagesResponse {
  repeated GetMessagesMessage messages = 1;
  int32 min_id = 2;
}

message BroadcastRequest { string username = 1; }

message BroadcastResponse {
  GetMessagesMessage chat_message = 1;
  GetChannelsMessage channel = 2;
  GetUsersMessage user = 3;
  GetUsersResponse users = 4;
  EditMessageRequest chat_message_edit = 5;
  EditChannelRequest channel_edit = 6;
  DeleteMessageRequest chat_message_deleted = 7;
  DeleteChannelRequest channel_deleted = 8;
}

service ChatService {
  // broadcast
  rpc Broadcast(BroadcastRequest) returns (stream BroadcastResponse);
  rpc CloseBroadcast(BroadcastRequest) returns (EmptyMessage);

  // add new object
  rpc AddMessage(NewMessageRequest) returns (EmptyMessage);
  rpc AddChannel(NewChannelRequest) returns (EmptyMessage);

  // delete object
  rpc DeleteMessage(DeleteMessageRequest) returns (EmptyMessage);
  rpc DeleteChannel(DeleteChannelRequest) returns (EmptyMessage);

  // edit object
  rpc EditMessage(EditMessageRequest) returns (EmptyMessage);
  rpc EditChannel(EditChannelRequest) returns (EmptyMessage);

  // get object
  rpc GetChannels(EmptyMessage) returns (GetChannelsResponse);
  rpc GetUsers(EmptyMessage) returns (GetUsersResponse);
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse);
  rpc GetFilteredMessages(GetFilteredMessagesRequest)
      returns (GetMessagesResponse);
}